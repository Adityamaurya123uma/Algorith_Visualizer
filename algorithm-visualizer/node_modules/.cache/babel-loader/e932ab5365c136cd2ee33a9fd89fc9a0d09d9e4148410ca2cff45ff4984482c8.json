{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Algorithm_Visualizer\\\\Algorith_Visualizer\\\\algorithm-visualizer\\\\src\\\\components\\\\content\\\\codeview.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Codeview = props => {\n  _s();\n  const [selectedAlgorithm, setselectedAlgorithm] = useState(\"\");\n  const options = [\"Selection Sort\", \"Merge Sort\", \"Quick Sort\", \"Bubble Sort\", \"Radix Sort\"];\n  const handleSelection = event => {\n    setselectedAlgorithm(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"codeviewWrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Algorithm Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.selectedAlgorithm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Codeview, \"xvzOQkHaMvFiqUKdMO7+GLTDhJ0=\");\n_c = Codeview;\nexport default Codeview;\nvar _c;\n$RefreshReg$(_c, \"Codeview\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Codeview","props","_s","selectedAlgorithm","setselectedAlgorithm","useState","options","handleSelection","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Projects/Algorithm_Visualizer/Algorith_Visualizer/algorithm-visualizer/src/components/content/codeview.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Codeview = (props) => {\r\n\r\n    const [selectedAlgorithm, setselectedAlgorithm] = useState(\"\");\r\n    const options = [\r\n      \"Selection Sort\",\r\n      \"Merge Sort\",\r\n      \"Quick Sort\",\r\n      \"Bubble Sort\",\r\n      \"Radix Sort\",\r\n    ];\r\n\r\n    const handleSelection = (event) => {\r\n      setselectedAlgorithm(event.target.value);\r\n    };\r\n\r\n  return (\r\n    <div className=\"codeviewWrapper\">\r\n      <div>\r\n        <label>Algorithm Selected</label>\r\n        <h1>{props.selectedAlgorithm}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Codeview;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAExB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAMC,OAAO,GAAG,CACd,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,aAAa,EACb,YAAY,CACb;EAED,MAAMC,eAAe,GAAIC,KAAK,IAAK;IACjCJ,oBAAoB,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1C,CAAC;EAEH,oBACEX,OAAA;IAAKY,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9Bb,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAO;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjCjB,OAAA;QAAAa,QAAA,EAAKX,KAAK,CAACE;MAAiB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAvBIF,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}