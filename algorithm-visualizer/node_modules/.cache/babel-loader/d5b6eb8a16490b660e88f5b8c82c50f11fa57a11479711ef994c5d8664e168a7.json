{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Algorithm_Visualizer\\\\Algorith_Visualizer\\\\algorithm-visualizer\\\\src\\\\components\\\\content\\\\controlpanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CodeView from \"./codeview\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ControlPanel = () => {\n  _s();\n  const [selectedAlgorithm, setselectedAlgorithm] = useState(\"\");\n  const options = [\"Selection Sort\", \"Merge Sort\", \"Quick Sort\", \"Bubble Sort\", \"Radix Sort\"];\n  const handleSelection = event => {\n    setselectedAlgorithm(event.target.value);\n  };\n  const code = `\n    void bubbleSort(std::vector<int>& arr) {\n        int n = arr.size();\n        bool swapped;\n\n        for (int i = 0; i < n - 1; i++) {\n            swapped = false;\n\n            for (int j = 0; j < n - i - 1; j++) {\n                if (arr[j] > arr[j + 1]) {\n                    std::swap(arr[j], arr[j + 1]);\n                    swapped = true;\n                }\n            }\n\n            // If no two elements were swapped in the inner loop, the array is already sorted.\n            if (!swapped) {\n                break;\n            }\n        }\n    }\n  `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"codeviewWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sorting Algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"custom-select\",\n        children: \"Choose an option:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"custom-select\",\n        className: \"custom-select\",\n        value: selectedAlgorithm,\n        onChange: handleSelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: selectedAlgorithm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CodeView, {\n        code: code,\n        language: \"ja\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ControlPanel, \"xvzOQkHaMvFiqUKdMO7+GLTDhJ0=\");\n_c = ControlPanel;\nexport default ControlPanel;\nvar _c;\n$RefreshReg$(_c, \"ControlPanel\");","map":{"version":3,"names":["React","useState","CodeView","jsxDEV","_jsxDEV","ControlPanel","_s","selectedAlgorithm","setselectedAlgorithm","options","handleSelection","event","target","value","code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","option","index","language","_c","$RefreshReg$"],"sources":["C:/Projects/Algorithm_Visualizer/Algorith_Visualizer/algorithm-visualizer/src/components/content/controlpanel.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport CodeView from \"./codeview\";\r\n\r\nconst ControlPanel = () => {\r\n  const [selectedAlgorithm, setselectedAlgorithm] = useState(\"\");\r\n  const options = [\r\n    \"Selection Sort\",\r\n    \"Merge Sort\",\r\n    \"Quick Sort\",\r\n    \"Bubble Sort\",\r\n    \"Radix Sort\",\r\n  ];\r\n\r\n  const handleSelection = (event) => {\r\n    setselectedAlgorithm(event.target.value);\r\n  };\r\n\r\n  const code = `\r\n    void bubbleSort(std::vector<int>& arr) {\r\n        int n = arr.size();\r\n        bool swapped;\r\n\r\n        for (int i = 0; i < n - 1; i++) {\r\n            swapped = false;\r\n\r\n            for (int j = 0; j < n - i - 1; j++) {\r\n                if (arr[j] > arr[j + 1]) {\r\n                    std::swap(arr[j], arr[j + 1]);\r\n                    swapped = true;\r\n                }\r\n            }\r\n\r\n            // If no two elements were swapped in the inner loop, the array is already sorted.\r\n            if (!swapped) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <div className=\"codeviewWrapper\">\r\n      <div>\r\n        <h1>Sorting Algorithm</h1>\r\n      </div>\r\n      <div className=\"select-container\">\r\n        <label htmlFor=\"custom-select\">Choose an option:</label>\r\n        <select\r\n          id=\"custom-select\"\r\n          className=\"custom-select\"\r\n          value={selectedAlgorithm}\r\n          onChange={handleSelection}\r\n        >\r\n          <option value=\"\">Select an option</option>\r\n          {options.map((option, index) => (\r\n            <option key={index} value={option}>\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <span>{selectedAlgorithm}</span>\r\n      <div>\r\n        <CodeView code={code} language=\"ja\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAMQ,OAAO,GAAG,CACd,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,aAAa,EACb,YAAY,CACb;EAED,MAAMC,eAAe,GAAIC,KAAK,IAAK;IACjCH,oBAAoB,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1C,CAAC;EAED,MAAMC,IAAI,GAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BZ,OAAA;MAAAY,QAAA,eACEZ,OAAA;QAAAY,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACNhB,OAAA;MAAKW,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BZ,OAAA;QAAOiB,OAAO,EAAC,eAAe;QAAAL,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxDhB,OAAA;QACEkB,EAAE,EAAC,eAAe;QAClBP,SAAS,EAAC,eAAe;QACzBF,KAAK,EAAEN,iBAAkB;QACzBgB,QAAQ,EAAEb,eAAgB;QAAAM,QAAA,gBAE1BZ,OAAA;UAAQS,KAAK,EAAC,EAAE;UAAAG,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACzCX,OAAO,CAACe,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBtB,OAAA;UAAoBS,KAAK,EAAEY,MAAO;UAAAT,QAAA,EAC/BS;QAAM,GADIC,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNhB,OAAA;MAAAY,QAAA,EAAOT;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAChChB,OAAA;MAAAY,QAAA,eACEZ,OAAA,CAACF,QAAQ;QAACY,IAAI,EAAEA,IAAK;QAACa,QAAQ,EAAC;MAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAhEID,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAkElB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}